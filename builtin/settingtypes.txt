# This file contains all settings displayed in the settings menu.
#
# General format:
#    name (Readable name) type type_args
#
# Note that the parts are separated by exactly one space
#
# `type` can be:
#    - int
#    - string
#    - bool
#    - float
#    - enum
#    - path
#    - filepath
#    - key (will be ignored in GUI, since a special key change dialog exists)
#
# `type_args` can be:
#   * int:
#            - default
#            - default min max
#   * string:
#            - default (if default is not specified then "" is set)
#   * bool:
#            - default
#   * float:
#            - default
#            - default min max
#   * enum:
#            - default value1,value2,...
#   * path:
#            - default (if default is not specified then "" is set)
#   * filepath:
#            - default (if default is not specified then "" is set)
#   * key:
#            - default
#
# Comments directly above a setting are bound to this setting.
# All other comments are ignored.
#
# Comments and (Readable name) are handled by gettext.
# Comments should be complete sentences that describe the setting and possibly
#  give the user additional useful insight.
# Sections are marked by a single line in the format: [Section Name]
# Sub-section are marked by adding * in front of the section name: [*Sub-section]
# Sub-sub-sections have two * etc.
# There shouldn't be too much settings per category; settings that shouldn't be
#  modified by the "average user" should be in (sub-)categories called "Advanced".


[Controls]

[*General]

#    Smooths rotation of camera, also called look or mouse smoothing. 0 to disable.
camera_smoothing (Camera smoothing) float 0.0 0.0 0.99

#    Smooths rotation of camera when in cinematic mode, 0 to disable.
#    Enter cinematic mode by using the key set in Change Keys.
cinematic_camera_smoothing (Camera smoothing in cinematic mode) float 0.7 0.0 0.99

#    If enabled, you can place nodes at the position (feet + eye level) where you stand.
#    This is helpful when working with nodeboxes in small areas.
enable_build_where_you_stand (Build inside player) bool false

#    If enabled, "Aux1" key instead of "Sneak" key is used for climbing down and
#    descending.
aux1_descends (Aux1 key for climbing/descending) bool false

#    Double-tapping the jump key toggles fly mode.
doubletap_jump (Double tap jump for fly) bool false

#    If disabled, "Aux1" key is used to fly fast if both fly and fast mode are
#    enabled.
always_fly_fast (Always fly fast) bool true

#    The time in seconds it takes between repeated node placements when holding
#    the place button.
repeat_place_time (Place repetition interval) float 0.25 0.16 2

#    Automatically jump up single-node obstacles.
autojump (Automatic jumping) bool false

#    Prevent digging and placing from repeating when holding the mouse buttons.
#    Enable this when you dig or place too often by accident.
safe_dig_and_place (Safe digging and placing) bool false

[*Keyboard and Mouse]

#    Invert vertical mouse movement.
invert_mouse (Invert mouse) bool false

#    Mouse sensitivity multiplier.
mouse_sensitivity (Mouse sensitivity) float 0.2 0.001 10.0

[*Touchscreen]

#    The length in pixels it takes for touch screen interaction to start.
#
#    Requires: touchscreen_gui
touchscreen_threshold (Touch screen threshold) int 20 0 100

#    Use crosshair to select object instead of whole screen.
#    If enabled, a crosshair will be shown and will be used for selecting object.
#
#    Requires: touchscreen_gui
touch_use_crosshair (Use crosshair for touch screen) bool false

#    (Android) Fixes the position of virtual joystick.
#    If disabled, virtual joystick will center to first-touch's position.
#
#    Requires: touchscreen_gui
fixed_virtual_joystick (Fixed virtual joystick) bool false

#    (Android) Use virtual joystick to trigger "Aux1" button.
#    If enabled, virtual joystick will also tap "Aux1" button when out of main circle.
#
#    Requires: touchscreen_gui
virtual_joystick_triggers_aux1 (Virtual joystick triggers Aux1 button) bool false


[Graphics and Audio]

[*Graphics]

[**Screen]

#    Width component of the initial window size.
screen_w (Screen width) int 1280 1 65535

#    Height component of the initial window size.
screen_h (Screen height) int 720 1 65535

#    Save window size automatically when modified.
#    If true, screen size is saved in screen_w and screen_h, and whether the window
#    is maximized is stored in window_maximized.
#    (Autosaving window_maximized only works if compiled with SDL.)
autosave_screensize (Remember screen size) bool true

#    Fullscreen mode.
fullscreen (Full screen) bool false

#    Open the pause menu when the window's focus is lost. Does not pause if a formspec is
#    open.
pause_on_lost_focus (Pause on lost window focus) bool false

[**FPS]

#    If FPS would go higher than this, limit it by sleeping
#    to not waste CPU power for no benefit.
fps_max (Maximum FPS) int 60 1 4294967295

#    Vertical screen synchronization. Your system may still force VSync on even if this is disabled.
vsync (VSync) bool false

#    Maximum FPS when the window is not focused, or when the game is paused.
fps_max_unfocused (FPS when unfocused or paused) int 20 1 4294967295

#    View distance in nodes.
viewing_range (Viewing range) int 190 20 4000

#    Undersampling is similar to using a lower screen resolution, but it applies
#    to the game world only, keeping the GUI intact.
#    It should give a significant performance boost at the cost of less detailed image.
#    Higher values result in a less detailed image.
undersampling (Undersampling) int 1 1 8

[**Graphics Effects]

#    Leaves style:
#    -   Fancy:  all faces visible
#    -   Simple: only outer faces, if defined special_tiles are used
#    -   Opaque: disable transparency
leaves_style (Leaves style) enum fancy fancy,simple,opaque

#    Connects glass if supported by node.
connected_glass (Connect glass) bool false

#    Enable smooth lighting with simple ambient occlusion.
#    Disable for speed or for different looks.
smooth_lighting (Smooth lighting) bool true

[**3d]

#    3D support.
#    Currently supported:
#    -    none: no 3d output.
#    -    anaglyph: cyan/magenta color 3d.
#    -    interlaced: odd/even line based polarisation screen support.
#    -    topbottom: split screen top/bottom.
#    -    sidebyside: split screen side by side.
#    -    crossview: Cross-eyed 3d
#    Note that the interlaced mode requires shaders to be enabled.
3d_mode (3D mode) enum none none,anaglyph,interlaced,topbottom,sidebyside,crossview

#    Strength of 3D mode parallax.
3d_paralax_strength (3D mode parallax strength) float 0.025 -0.087 0.087

[**Camera]

#    Field of view in degrees.
fov (Field of view) int 72 45 160

#    Alters the light curve by applying 'gamma correction' to it.
#    Higher values make middle and lower light levels brighter.
#    Value '1.0' leaves the light curve unaltered.
#    This only has significant effect on daylight and artificial
#    light, it has very little effect on natural night light.
display_gamma (Light curve gamma) float 1.0 0.33 3.0

#    The strength (darkness) of node ambient-occlusion shading.
#    Lower is darker, Higher is lighter. The valid range of values for this
#    setting is 0.25 to 4.0 inclusive. If the value is out of range it will be
#    set to the nearest valid value.
ambient_occlusion_gamma (Ambient occlusion gamma) float 1.8 0.25 4.0

#    Enable view bobbing and amount of view bobbing.
#    For example: 0 for no view bobbing; 1.0 for normal; 2.0 for double.
view_bobbing_amount (View bobbing factor) float 1.0 0.0 7.9

[**Fog]

#    Whether to fog out the end of the visible area.
enable_fog (Fog) bool true

#    Fraction of the visible distance at which fog starts to be rendered
#
#    Requires: enable_fog
fog_start (Fog start) float 0.4 0.0 0.99

[**Clouds]

#    Clouds are a client side effect.
enable_clouds (Clouds) bool true

#    Use 3D cloud look instead of flat.
#
#    Requires: enable_clouds
enable_3d_clouds (3D clouds) bool true

[**Filtering and Antialiasing]

#    Use mipmapping to scale textures. May slightly increase performance,
#    especially when using a high resolution texture pack.
#    Gamma correct downscaling is not supported.
mip_map (Mipmapping) bool false

#    Use anisotropic filtering when viewing at textures from an angle.
anisotropic_filter (Anisotropic filtering) bool false

#    Select the antialiasing method to apply.
#
#    * None - No antialiasing (default)
#
#    * FXAA - Fast approximate antialiasing
#             Applies a post-processing filter to detect and smoothen high-contrast edges.
#             Provides balance between speed and image quality.
#
#    * SSAA - Super-sampling antialiasing
#             Renders higher-resolution image of the scene, then scales down to reduce
#             the aliasing effects. This is the slowest and the most accurate method.
antialiasing (Antialiasing method) enum none none,fsaa,fxaa,ssaa

#    Defines size of the sampling grid for FSAA and SSAA antializasing methods.
#    Value of 2 means taking 2x2 = 4 samples.
fsaa (Anti-aliasing scale) enum 2 2,4,8,16


[**Occlusion Culling]

#    Type of occlusion_culler
#
#    "loops" is the legacy algorithm with nested loops and O(nÂ³) complexity
#    "bfs" is the new algorithm based on breadth-first-search and side culling
#
#    This setting should only be changed if you have performance problems.
occlusion_culler (Occlusion Culler) enum bfs bfs,loops

#    Use raytraced occlusion culling in the new culler.
#	 This flag enables use of raytraced occlusion culling test for
#    client mesh sizes smaller than 4x4x4 map blocks.
enable_raytraced_culling (Enable Raytraced Culling) bool true



[*Shaders]

#    Shaders allow advanced visual effects and may increase performance on some video
#    cards.
#    This only works with the OpenGL video backend.
enable_shaders (Shaders) bool true

[**Waving Nodes]

#    Set to true to enable waving leaves.
#
#    Requires: shaders
enable_waving_leaves (Waving leaves) bool false

#    Set to true to enable waving plants.
#
#    Requires: shaders
enable_waving_plants (Waving plants) bool false

#    Set to true to enable waving liquids (like water).
#
#    Requires: shaders
enable_waving_water (Waving liquids) bool false

[**Dynamic shadows]

#    Set to true to enable Shadow Mapping.
#
#    Requires: shaders, opengl
enable_dynamic_shadows (Dynamic shadows) bool false

#    Set the shadow strength gamma.
#    Adjusts the intensity of in-game dynamic shadows.
#    Lower value means lighter shadows, higher value means darker shadows.
#
#    Requires: shaders, enable_dynamic_shadows, opengl
shadow_strength_gamma (Shadow strength gamma) float 1.0 0.1 10.0

#    Maximum distance to render shadows.
#
#    Requires: shaders, enable_dynamic_shadows, opengl
shadow_map_max_distance (Shadow map max distance in nodes to render shadows) float 200.0 10.0 1000.0

#    Texture size to render the shadow map on.
#    This must be a power of two.
#    Bigger numbers create better shadows but it is also more expensive.
#
#    Requires: shaders, enable_dynamic_shadows, opengl
shadow_map_texture_size (Shadow map texture size) int 2048 128 8192

#    Sets shadow texture quality to 32 bits.
#    On false, 16 bits texture will be used.
#    This can cause much more artifacts in the shadow.
#
#    Requires: shaders, enable_dynamic_shadows, opengl
shadow_map_texture_32bit (Shadow map texture in 32 bits) bool true

#    Enable Poisson disk filtering.
#    On true uses Poisson disk to make "soft shadows". Otherwise uses PCF filtering.
#
#    Requires: shaders, enable_dynamic_shadows, opengl
shadow_poisson_filter (Poisson filtering) bool true

#   Define shadow filtering quality.
#   This simulates the soft shadows effect by applying a PCF or Poisson disk
#   but also uses more resources.
#
#    Requires: shaders, enable_dynamic_shadows, opengl
shadow_filters (Shadow filter quality) enum 1 0,1,2

#    Enable colored shadows.
#    On true translucent nodes cast colored shadows. This is expensive.
#
#    Requires: shaders, enable_dynamic_shadows, opengl
shadow_map_color (Colored shadows) bool false

#    Spread a complete update of shadow map over given amount of frames.
#    Higher values might make shadows laggy, lower values
#    will consume more resources.
#    Minimum value: 1; maximum value: 16
#
#    Requires: shaders, enable_dynamic_shadows, opengl
shadow_update_frames (Map shadows update frames) int 8 1 16

#    Set the soft shadow radius size.
#    Lower values mean sharper shadows, bigger values mean softer shadows.
#    Minimum value: 1.0; maximum value: 15.0
#
#    Requires: shaders, enable_dynamic_shadows, opengl
shadow_soft_radius (Soft shadow radius) float 5.0 1.0 15.0

[**Post Processing]

#    Enables Hable's 'Uncharted 2' filmic tone mapping.
#    Simulates the tone curve of photographic film and how this approximates the
#    appearance of high dynamic range images. Mid-range contrast is slightly
#    enhanced, highlights and shadows are gradually compressed.
#
#    Requires: shaders
tone_mapping (Filmic tone mapping) bool false

#    Enable automatic exposure correction
#    When enabled, the post-processing engine will
#    automatically adjust to the brightness of the scene,
#    simulating the behavior of human eye.
#
#    Requires: shaders
enable_auto_exposure (Enable Automatic Exposure) bool false

#    Set the exposure compensation in EV units.
#    Value of 0.0 (default) means no exposure compensation.
#    Range: from -1 to 1.0
#
#    Requires: shaders, enable_auto_exposure
exposure_compensation (Exposure compensation) float 0.0 -1.0 1.0

[**Bloom]

#    Set to true to enable bloom effect.
#    Bright colors will bleed over the neighboring objects.
enable_bloom (Enable Bloom) bool false

#    Defines how much bloom is applied to the rendered image
#    Smaller values make bloom more subtle
#    Range: from 0.01 to 1.0, default: 0.05
#
#    Requires: shaders, enable_bloom
bloom_intensity (Bloom Intensity) float 0.05 0.01 1.0

#    Defines the magnitude of bloom overexposure.
#    Range: from 0.1 to 10.0, default: 1.0
#
#    Requires: shaders, enable_bloom
bloom_strength_factor (Bloom Strength Factor) float 1.0 0.1 10.0

#    Logical value that controls how far the bloom effect spreads
#    from the bright objects.
#    Range: from 0.1 to 8, default: 1
#
#    Requires: shaders, enable_bloom
bloom_radius (Bloom Radius) float 1 0.1 8


[*Audio]

#    Volume of all sounds.
#    Requires the sound system to be enabled.
sound_volume (Volume) float 0.8 0.0 1.0

#    Whether to mute sounds. You can unmute sounds at any time.
#    In-game, you can toggle the mute state with the mute key or by using the
#    pause menu.
mute_sound (Mute sound) bool false

[*User Interfaces]

[**GUIs]

#    Scale GUI by a user specified value.
#    Use a nearest-neighbor-anti-alias filter to scale the GUI.
#    This will smooth over some of the rough edges, and blend
#    pixels when scaling down, at the cost of blurring some
#    edge pixels when images are scaled by non-integer sizes.
gui_scaling (GUI scaling) float 1.0 0.5 20

#    Enables animation of inventory items.
inventory_items_animations (Inventory items animations) bool true

#    When gui_scaling_filter is true, all GUI images need to be
#    filtered in software, but some images are generated directly
#    to hardware (e.g. render-to-texture for nodes in inventory).
gui_scaling_filter (GUI scaling filter) bool false

[**HUD]

#    Modifies the size of the HUD elements.
hud_scaling (HUD scaling) float 1.0 0.5 20

#    Whether name tag backgrounds should be shown by default.
#    Mods may still set a background.
show_nametag_backgrounds (Show name tag backgrounds by default) bool true

[**Chat]

#    Maximum number of recent chat messages to show
recent_chat_messages (Recent Chat Messages) int 6 2 20

#    Maximum proportion of current window to be used for hotbar.
#    Useful if there's something to be displayed right or left of hotbar.
hud_hotbar_max_width (Maximum hotbar width) float 1.0 0.001 1.0

#    Font size of the recent chat text and chat prompt in point (pt).
#    Value 0 will use the default font size.
chat_font_size (Chat font size) int 0 0 72


[Advanced]

[*Graphics]

#    The rendering back-end.
#    Note: A restart is required after changing this!
#    OpenGL is the default for desktop, and OGLES2 for Android.
#    Shaders are supported by OpenGL and OGLES2 (experimental).
video_driver (Video driver) enum  ,opengl,ogles1,ogles2

#    Distance in nodes at which transparency depth sorting is enabled
#    Use this to limit the performance impact of transparency depth sorting
transparency_sorting_distance (Transparency Sorting Distance) int 16 0 128

#    Delay between mesh updates on the client in ms. Increasing this will slow
#    down the rate of mesh updates, thus reducing jitter on slower clients.
mesh_generation_interval (Mapblock mesh generation delay) int 0 0 50

#    Number of threads to use for mesh generation.
#    Value of 0 (default) will let Minetest autodetect the number of available threads.
mesh_generation_threads (Mapblock mesh generation threads) int 0 0 8

#    Size of the MapBlock cache of the mesh generator. Increasing this will
#    increase the cache hit %, reducing the data being copied from the main
#    thread, thus reducing jitter.
meshgen_block_cache_size (Mapblock mesh generator's MapBlock cache size in MB) int 20 0 1000

#    True = 256
#    False = 128
#    Usable to make minimap smoother on slower machines.
minimap_double_scan_height (Minimap scan height) bool true

#    Side length of a cube of map blocks that the client will consider together
#    when generating meshes.
#    Larger values increase the utilization of the GPU by reducing the number of
#    draw calls, benefiting especially high-end GPUs.
#    Systems with a low-end GPU (or no GPU) would benefit from smaller values.
client_mesh_chunk (Client Mesh Chunksize) int 1 1 16

[*Font]

font_bold (Font bold by default) bool false

#    Shadow offset (in pixels) of the default font. If 0, then shadow will not be drawn.
font_shadow (Font shadow) int 1 0 65535

#    Opaqueness (alpha) of the shadow behind the default font, between 0 and 255.
font_shadow_alpha (Font shadow alpha) int 127 0 255

#    Font size of the default font where 1 unit = 1 pixel at 96 DPI
font_size (Font size) int 16 5 72

#    For pixel-style fonts that do not scale well, this ensures that font sizes used
#    with this font will always be divisible by this value, in pixels. For instance,
#    a pixel font 16 pixels tall should have this set to 16, so it will only ever be
#    sized 16, 32, 48, etc., so a mod requesting a size of 25 will get 32.
font_size_divisible_by (Font size divisible by) int 1 1

#    Path to the default font. Must be a TrueType font.
#    The fallback font will be used if the font cannot be loaded.
font_path (Regular font path) filepath fonts/Arimo-Regular.ttf

font_path_bold (Bold font path) filepath fonts/Arimo-Regular.ttf

#    Font size of the monospace font where 1 unit = 1 pixel at 96 DPI
mono_font_size (Monospace font size) int 16 5 72

#    For pixel-style fonts that do not scale well, this ensures that font sizes used
#    with this font will always be divisible by this value, in pixels. For instance,
#    a pixel font 16 pixels tall should have this set to 16, so it will only ever be
#    sized 16, 32, 48, etc., so a mod requesting a size of 25 will get 32.
mono_font_size_divisible_by (Monospace font size divisible by) int 1 1

#    Path to the monospace font. Must be a TrueType font.
#    This font is used for e.g. the console and profiler screen.
mono_font_path (Monospace font path) filepath fonts/Cousine-Regular.ttf

mono_font_path_bold (Bold monospace font path) filepath fonts/Cousine-Regular.ttf

[*Lighting]

#    Gradient of light curve at minimum light level.
#    Controls the contrast of the lowest light levels.
lighting_alpha (Light curve low gradient) float 0.0 0.0 3.0

#    Gradient of light curve at maximum light level.
#    Controls the contrast of the highest light levels.
lighting_beta (Light curve high gradient) float 1.5 0.0 3.0

#    Strength of light curve boost.
#    The 3 'boost' parameters define a range of the light
#    curve that is boosted in brightness.
lighting_boost (Light curve boost) float 0.2 0.0 0.4

#    Center of light curve boost range.
#    Where 0.0 is minimum light level, 1.0 is maximum light level.
lighting_boost_center (Light curve boost center) float 0.5 0.0 1.0

#    Spread of light curve boost range.
#    Controls the width of the range to be boosted.
#    Standard deviation of the light curve boost Gaussian.
lighting_boost_spread (Light curve boost spread) float 0.2 0.0 0.4

[*Networking]

#    Enable IPv6 support (for both client and server).
#    Required for IPv6 connections to work at all.
enable_ipv6 (IPv6) bool true

#    Timeout for client to remove unused map data from memory, in seconds.
client_unload_unused_data_timeout (Mapblock unload timeout) float 600.0 0.0

#    Maximum number of mapblocks for client to be kept in memory.
#    Set to -1 for unlimited amount.
client_mapblock_limit (Mapblock limit) int 7500 -1 2147483647

#    Whether to show the client debug info (has the same effect as hitting F5).
show_debug (Show debug info) bool false

[*Misc]

#    Adjust dpi configuration to your screen (non X11/Android only) e.g. for 4k screens.
screen_dpi (DPI) int 72 1

#    Adjust the detected display density, used for scaling UI elements.
display_density_factor (Display Density Scaling Factor) float 1 0.5 5.0
